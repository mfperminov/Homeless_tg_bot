name: Build and Deploy Homeless Bot

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build --info

      - name: List build output
        run: ls -la build/libs/

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: homeless-bot-jar
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      APP_DIR: "/opt/homeless-bot"
      SERVICE_NAME: "homeless-bot"
      JAR_NAME: "app.jar"

    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: homeless-bot-jar
          path: ./artifact

      - name: List downloaded artifacts
        run: ls -la ./artifact/

      - name: Copy JAR to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          source: "./artifact/*.jar"
          target: "/tmp/app.jar"

      - name: Run deploy script on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            set -e
            
            echo "Creating application directory..."
            sudo mkdir -p ${{ env.APP_DIR }}/src/main/resources
            
            echo "Moving JAR file to final location..."
            # Remove existing file/directory if it exists
            sudo rm -rf ${{ env.APP_DIR }}/${{ env.JAR_NAME }}
            
            # Copy the JAR file
            sudo cp /tmp/app.jar ${{ env.APP_DIR }}/${{ env.JAR_NAME }}
            
            # Set proper permissions
            sudo chown ${{ secrets.VPS_USER }}:${{ secrets.VPS_USER }} ${{ env.APP_DIR }}/${{ env.JAR_NAME }}
            sudo chmod 755 ${{ env.APP_DIR }}/${{ env.JAR_NAME }}
            
            echo "Verifying JAR file..."
            if [ ! -f "${{ env.APP_DIR }}/${{ env.JAR_NAME }}" ]; then
              echo "Error: JAR file does not exist at ${{ env.APP_DIR }}/${{ env.JAR_NAME }}"
              exit 1
            fi
            
            if [ ! -s "${{ env.APP_DIR }}/${{ env.JAR_NAME }}" ]; then
              echo "Error: JAR file is empty"
              exit 1
            fi
            
            echo "JAR file details:"
            ls -la ${{ env.APP_DIR }}/${{ env.JAR_NAME }}
            file ${{ env.APP_DIR }}/${{ env.JAR_NAME }}
            
            echo "Creating environment files..."
            sudo mkdir -p ${{ env.APP_DIR }}/src
            echo "tg.bot.token=${{ secrets.TG_BOT_TOKEN }}" | sudo tee ${{ env.APP_DIR }}/src/app.env > /dev/null
            echo "spreadsheet.id=${{ secrets.SPREADSHEET_ID }}" | sudo tee -a ${{ env.APP_DIR }}/src/app.env > /dev/null
            
            echo "Creating credentials file..."
            echo '${{ secrets.GOOGLE_CREDENTIALS_JSON }}' | sudo tee ${{ env.APP_DIR }}/src/main/resources/credentials.json > /dev/null
            
            echo "Setting up systemd service..."
            echo '[Unit]
            Description=Homeless Bot Service
            After=network.target
            
            [Service]
            User=${{ secrets.VPS_USER }}
            Group=${{ secrets.VPS_USER }}
            WorkingDirectory=${{ env.APP_DIR }}
            ExecStart=/usr/bin/java -jar ${{ env.APP_DIR }}/${{ env.JAR_NAME }}
            SuccessExitStatus=143
            Restart=always
            RestartSec=5s
            StandardOutput=journal
            StandardError=journal
            SyslogIdentifier=${{ env.SERVICE_NAME }}
            
            [Install]
            WantedBy=multi-user.target' | sudo tee /etc/systemd/system/${{ env.SERVICE_NAME }}.service > /dev/null
            
            echo "Setting permissions..."
            sudo chown -R ${{ secrets.VPS_USER }}:${{ secrets.VPS_USER }} ${{ env.APP_DIR }}
            
            echo "Reloading systemd..."
            sudo systemctl daemon-reload
            
            echo "Enabling and restarting service..."
            sudo systemctl enable ${{ env.SERVICE_NAME }}
            sudo systemctl restart ${{ env.SERVICE_NAME }}
            
            echo "Checking service status..."
            sudo systemctl status ${{ env.SERVICE_NAME }}
            
            echo "Deployment complete. To check logs, use: journalctl -u ${{ env.SERVICE_NAME }} -f"