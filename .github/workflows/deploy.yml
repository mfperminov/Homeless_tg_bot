name: Build and Deploy Homeless Bot

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: |
          ./gradlew clean shadowJar --info
          echo "Listing JAR contents:"
          jar tf build/libs/*-all.jar
          echo "Showing manifest:"
          unzip -p build/libs/*-all.jar META-INF/MANIFEST.MF

      - name: List build output
        run: ls -la build/libs/

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: homeless-bot-jar
          path: build/libs/*-all.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: homeless-bot-jar
          path: ./

      - name: Rename Artifact
        run: mv ./*-all.jar app.jar

      - name: Copy artifact to server via rsync
        uses: easingthemes/ssh-deploy@v5.0.0
        with:
          SSH_PRIVATE_KEY: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.VPS_HOST }}
          REMOTE_USER: ${{ secrets.VPS_USER }}
          SOURCE: "app.jar"
          TARGET: "/tmp"

      - name: Install and restart service on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            set -euo pipefail
            
            # --- Variables ---
            APP_DIR="/opt/homeless-bot"
            JAR_NAME="app.jar"
            SERVICE_NAME="homeless-bot"
            VPS_USER=${{ secrets.VPS_USER }}

            JAR_FILE_TMP="/tmp/$JAR_NAME"
            JAR_FILE_DEST="$APP_DIR/$JAR_NAME"
            RESOURCES_DIR="$APP_DIR/src/main/resources"
            ENV_FILE_PATH="$APP_DIR/src/app.env"
            CREDENTIALS_FILE_PATH="$RESOURCES_DIR/credentials.json"
            SERVICE_FILE="/etc/systemd/system/$SERVICE_NAME.service"
            
            echo "--- Starting Deployment on Server ---"

            echo "1. Verifying temporary JAR file..."
            if [ ! -f "$JAR_FILE_TMP" ]; then
              echo "   ERROR: JAR file not found at $JAR_FILE_TMP after copy. Deployment failed."
              exit 1
            fi
            echo "   Temporary JAR file found. Details:"
            ls -la "$JAR_FILE_TMP"

            echo "2. Stopping existing service..."
            sudo systemctl stop "$SERVICE_NAME" || echo "   Service was not running, which is fine."

            echo "3. Preparing application directories..."
            sudo mkdir -p "$RESOURCES_DIR"
            
            echo "4. Deploying new JAR file..."
            sudo mv "$JAR_FILE_TMP" "$JAR_FILE_DEST"
            echo "   JAR moved to $JAR_FILE_DEST."
            
            echo "5. Writing configuration files..."
            echo "   Writing environment file..."
            sudo tee "$ENV_FILE_PATH" > /dev/null << EOF
            tg.bot.token=${{ secrets.TG_BOT_TOKEN }}
            spreadsheet.id=${{ secrets.SPREADSHEET_ID }}
            EOF
            
            echo "   Writing credentials file..."
            echo '${{ secrets.GOOGLE_CREDENTIALS_JSON }}' | sudo tee "$CREDENTIALS_FILE_PATH" > /dev/null

            echo "6. Creating systemd service file..."
            sudo tee "$SERVICE_FILE" > /dev/null << EOF
            [Unit]
            Description=Homeless Bot Service
            After=network.target
            
            [Service]
            User=$VPS_USER
            Group=$VPS_USER
            WorkingDirectory=$APP_DIR
            ExecStart=/usr/bin/java -jar $JAR_FILE_DEST
            SuccessExitStatus=143
            Restart=always
            RestartSec=10s
            
            [Install]
            WantedBy=multi-user.target
            EOF
            echo "   Service file written to $SERVICE_FILE."
            
            echo "7. Setting file ownership and permissions..."
            sudo chown -R "$VPS_USER":"$VPS_USER" "$APP_DIR"
            sudo chmod 755 "$JAR_FILE_DEST"
            echo "   Permissions set."
            
            echo "8. Reloading systemd and restarting service..."
            sudo systemctl daemon-reload
            sudo systemctl enable "$SERVICE_NAME"
            sudo systemctl restart "$SERVICE_NAME"
            echo "   Service enabled and restarted."
            
            echo "9. Checking final service status..."
            sleep 5 
            sudo systemctl status "$SERVICE_NAME" --no-pager
            
            echo "--- Deployment Complete ---"